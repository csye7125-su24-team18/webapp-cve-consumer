package main

import (
	"fmt"
	"log"
	"net/http"
	"runtime"
	"time"
)

const maxMemoryUsage = 50 * 1024 * 1024 // Set the max memory usage limit to 500MB

var isAlive = true

func main() {
	// Start the memory usage checker goroutine
	go func() {
		for {
			time.Sleep(10 * time.Second)
			var memStats runtime.MemStats
			runtime.ReadMemStats(&memStats)
			if memStats.Alloc > maxMemoryUsage {
				isAlive = false
			}
		}
	}()

	// Set up the liveness HTTP handler
	http.HandleFunc("/liveness", func(w http.ResponseWriter, r *http.Request) {
		if isAlive {
			w.WriteHeader(http.StatusOK)
			w.Write([]byte("OK"))
		} else {
			http.Error(w, "Out of memory", http.StatusInternalServerError)
		}
	})

	// Start the HTTP server
	port := 8080
	log.Printf("Starting server on port %d...", port)
	err := http.ListenAndServe(fmt.Sprintf(":%d", port), nil)
	if err != nil {
		log.Fatalf("Server failed to start: %v", err)
	}
}
