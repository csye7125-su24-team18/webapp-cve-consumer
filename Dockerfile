# Use the official Golang image as a builder stage
FROM golang:latest AS builder

# Set the working directory inside the container for the main application
WORKDIR /app

# Copy the main application's Go module files and source code
COPY go.mod .
COPY go.sum .
RUN go mod download
COPY main.go .
RUN go build -o app main.go

# Set the working directory inside the container for the readiness application
WORKDIR /app/readiness
COPY readiness/go.mod .
COPY readiness/go.sum .
RUN go mod download
COPY readiness/readiness.go .
RUN go build -o readiness readiness.go

# Set the working directory inside the container for the liveness application
WORKDIR /app/liveness
COPY liveness/go.mod .
RUN go mod download
COPY liveness/liveness.go .
RUN go build -o liveness liveness.go

# Start a new stage from scratch
FROM golang:latest

# Set the working directory inside the container
WORKDIR /app

# Copy the compiled binaries from the builder stage
COPY --from=builder /app/app .
COPY --from=builder /app/readiness/readiness .
COPY --from=builder /app/liveness/liveness .

# Run the executables
CMD ["sh", "-c", "./app & ./liveness"]
