package main

import (
	"context"
	"database/sql"
	"log"
	"os"
	"strings"

	_ "github.com/lib/pq"
	"github.com/segmentio/kafka-go"
)

var dbConnStr = os.Getenv("DATABASE_URL")
var kafkaTopic = os.Getenv("KAFKA_TOPIC")
var kafkaBrokers = strings.Split(os.Getenv("KAFKA_BROKER_ADDRESSES"), ",")

func main() {
	// Check database connection
	db, err := sql.Open("postgres", dbConnStr)
	if err != nil {
		log.Fatalf("Failed to open database connection: %v", err)
		os.Exit(1)
	}
	defer db.Close()

	err = db.Ping()
	if err != nil {
		log.Fatalf("Database connection failed: %v", err)
		os.Exit(1)
	}

	// Check Kafka connection
	conn, err := kafka.DialLeader(context.Background(), "tcp", kafkaBrokers[0], kafkaTopic, 0)
	if err != nil {
		log.Fatalf("Failed to connect to Kafka: %v", err)
		os.Exit(1)
	}
	defer conn.Close()

	// Check Kafka topic existence
	partitions, err := conn.ReadPartitions(kafkaTopic)
	if err != nil || len(partitions) == 0 {
		log.Fatalf("Kafka topic does not exist: %v", err)
		os.Exit(1)
	}

	log.Println("Readiness check passed")
}
